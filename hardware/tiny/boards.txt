
###########################################################################
#
# Example boards.txt from...
#
# http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1236434254/94#94
# http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1274754985/6#6
# http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1274820597/49#49
#
###########################################################################

attiny84at16.name=ATtiny84 @ 16 MHz  (external crystal; 4.3 V BOD)

# The following do NOT work...
# attiny84at16.upload.using=avrispv2
# attiny84at16.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny84at16.upload.using=arduino:arduinoisp
# attiny84at16.upload.protocol=avrispv2
# attiny84at16.upload.using=pololu

attiny84at16.upload.maximum_size=8192
attiny84at16.upload.maximum_ram_size=512

# Frequency 8.0- MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 65 ms; [CKSEL=1111 SUT=11]
# Brown-out detection level at VCC=4.3 V; [BODLEVEL=100]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]
# Serial program downloading (SPI) enabled; [SPIEN=0]

attiny84at16.bootloader.low_fuses=0xFF
attiny84at16.bootloader.high_fuses=0xD4
attiny84at16.bootloader.extended_fuses=0xFF
attiny84at16.bootloader.path=empty
attiny84at16.bootloader.file=empty_all.hex

attiny84at16.build.mcu=attiny84
attiny84at16.build.f_cpu=16000000L
attiny84at16.build.core=tiny
 
###########################################################################

attiny84at8.name=ATtiny84 @ 8 MHz  (internal oscillator; BOD disabled)

# The following do NOT work...
# attiny84at8.upload.using=avrispv2
# attiny84at8.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny84at8.upload.using=arduino:arduinoisp
# attiny84at8.upload.protocol=avrispv2
# attiny84at8.upload.using=pololu

attiny84at8.upload.maximum_size=8192
attiny84at8.upload.maximum_ram_size=512


# Default clock (slowly rising power; long delay to clock; 8 MHz internal)
# Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms; [CKSEL=0010 SUT=10]; default value
# Brown-out detection disabled; [BODLEVEL=111]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny84at8.bootloader.low_fuses=0xE2
attiny84at8.bootloader.high_fuses=0xD7
attiny84at8.bootloader.extended_fuses=0xFF
attiny84at8.bootloader.path=empty
attiny84at8.bootloader.file=empty_all.hex

attiny84at8.build.mcu=attiny84
attiny84at8.build.f_cpu=8000000L
attiny84at8.build.core=tiny
 
###########################################################################

attiny84at1.name=ATtiny84 @ 1 MHz  (internal oscillator; BOD disabled)

# The following do NOT work...
# attiny84at1.upload.using=avrispv2
# attiny84at1.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny84at1.upload.using=arduino:arduinoisp
# attiny84at1.upload.protocol=avrispv2
# attiny84at1.upload.using=pololu

attiny84at1.upload.maximum_size=8192
attiny84at1.upload.maximum_ram_size=512


# Default clock (slowly rising power; long delay to clock; 8 MHz internal; divide clock by 8)
# Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms; [CKSEL=0010 SUT=10]; default value
# Divide clock by 8 internally; [CKDIV8=0]
# Brown-out detection disabled; [BODLEVEL=111]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny84at1.bootloader.low_fuses=0x62
attiny84at1.bootloader.high_fuses=0xD7
attiny84at1.bootloader.extended_fuses=0xFF
attiny84at1.bootloader.path=empty
attiny84at1.bootloader.file=empty_all.hex

attiny84at1.build.mcu=attiny84
attiny84at1.build.f_cpu=1000000L
attiny84at1.build.core=tiny
 
###########################################################################

attiny44at8.name=ATtiny44 @ 8 MHz  (internal oscillator; BOD disabled)

# The following do NOT work...
# attiny44at8.upload.using=avrispv2
# attiny44at8.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny44at8.upload.using=arduino:arduinoisp
# attiny44at8.upload.protocol=avrispv2
# attiny44at8.upload.using=pololu

attiny44at8.upload.maximum_size=4096
attiny44at8.upload.maximum_ram_size=256

# Default clock (slowly rising power; long delay to clock; 8 MHz internal)
# Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms; [CKSEL=0010 SUT=10]; default value
# Brown-out detection disabled; [BODLEVEL=111]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny44at8.bootloader.low_fuses=0xE2
attiny44at8.bootloader.high_fuses=0xD7
attiny44at8.bootloader.extended_fuses=0xFF
attiny44at8.bootloader.path=empty
attiny44at8.bootloader.file=empty_all.hex

attiny44at8.build.mcu=attiny44
attiny44at8.build.f_cpu=8000000L
attiny44at8.build.core=tiny
# attiny44at8.build.core=empty
 
###########################################################################

attiny44at1.name=ATtiny44 @ 1 MHz  (internal oscillator; BOD disabled)

# The following do NOT work...
# attiny44at1.upload.using=avrispv2
# attiny44at1.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny44at1.upload.using=arduino:arduinoisp
# attiny44at1.upload.protocol=avrispv2
# attiny44at1.upload.using=pololu

attiny44at1.upload.maximum_size=4096
attiny44at1.upload.maximum_ram_size=256

# Default clock (slowly rising power; long delay to clock; 8 MHz internal; divide clock by 8)
# Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms; [CKSEL=0010 SUT=10]; default value
# Divide clock by 8 internally; [CKDIV8=0]
# Brown-out detection disabled; [BODLEVEL=111]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny44at1.bootloader.low_fuses=0x62
attiny44at1.bootloader.high_fuses=0xD7
attiny44at1.bootloader.extended_fuses=0xFF
attiny44at1.bootloader.path=empty
attiny44at1.bootloader.file=empty_all.hex

attiny44at1.build.mcu=attiny44
attiny44at1.build.f_cpu=1000000L
attiny44at1.build.core=tiny
# attiny44at1.build.core=empty
 
###########################################################################

attiny24at16.name=ATtiny24 @ 16 MHz  (external crystal; BOD disabled)

# The following do NOT work...
# attiny24at16.upload.using=avrispv2
# attiny24at16.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny24at16.upload.using=arduino:arduinoisp
# attiny24at16.upload.protocol=avrispv2
# attiny24at16.upload.using=pololu

attiny24at16.upload.maximum_size=2048
attiny24at16.upload.maximum_ram_size=128

# Ext. Crystal Osc.; Frequency 8.0-    MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 65 ms;  [CKSEL=1111 SUT=11]
# Brown-out detection disabled; [BODLEVEL=111]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]
# Serial program downloading (SPI) enabled; [SPIEN=0]

attiny24at16.bootloader.low_fuses=0xFF
attiny24at16.bootloader.high_fuses=0xD7
attiny24at16.bootloader.extended_fuses=0xFF
attiny24at16.bootloader.path=empty
attiny24at16.bootloader.file=empty_all.hex

attiny24at16.build.mcu=attiny24
attiny24at16.build.f_cpu=16000000L
attiny24at16.build.core=tiny
 
###########################################################################

attiny85at16e.name=ATtiny85 @ 16 MHz  (external crystal; 4.3 V BOD)

# The following do NOT work...
# attiny85at16e.upload.using=avrispv2
# attiny85at16e.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny85at16e.upload.using=arduino:arduinoisp
# attiny85at16e.upload.protocol=avrispv2
# attiny85at16e.upload.using=pololu

attiny85at16e.upload.maximum_size=8192
attiny85at16e.upload.maximum_ram_size=512

# Ext. Crystal Osc.; Frequency 8.0- MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 65 ms; [CKSEL=1111 SUT=11]
# Brown-out detection level at VCC=4.3 V; [BODLEVEL=100]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]
# Serial program downloading (SPI) enabled; [SPIEN=0]

attiny85at16e.bootloader.low_fuses=0xFF
attiny85at16e.bootloader.high_fuses=0xD4
attiny85at16e.bootloader.extended_fuses=0xFF
attiny85at16e.bootloader.path=empty
attiny85at16e.bootloader.file=empty_all.hex

attiny85at16e.build.mcu=attiny85
attiny85at16e.build.f_cpu=16000000L
attiny85at16e.build.core=tiny
 
###########################################################################

attiny85at16p.name=ATtiny85 @ 16 MHz  (internal PLL; 4.3 V BOD)

# The following do NOT work...
# attiny85at16p.upload.using=avrispv2
# attiny85at16p.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny85at16p.upload.using=arduino:arduinoisp
# attiny85at16p.upload.protocol=avrispv2
# attiny85at16p.upload.using=pololu

attiny85at16p.upload.maximum_size=8192
attiny85at16p.upload.maximum_ram_size=512

# PLL Clock; Start-up time PWRDWN/RESET: 1K CK/14 CK + 4 ms; [CKSEL=0001 SUT=00]
# Brown-out detection level at VCC=4.3 V; [BODLEVEL=100]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]
# Serial program downloading (SPI) enabled; [SPIEN=0]

attiny85at16p.bootloader.low_fuses=0xC1
attiny85at16p.bootloader.high_fuses=0xD4
attiny85at16p.bootloader.extended_fuses=0xFF
attiny85at16p.bootloader.path=empty
#attiny85at16p.bootloader.file=empty_all.hex
attiny85at16p.bootloader.file=empty_all.hex

attiny85at16p.build.mcu=attiny85
attiny85at16p.build.f_cpu=16000000L
attiny85at16p.build.core=tiny
 
###########################################################################

attiny85at8.name=ATtiny85 @ 8 MHz  (internal oscillator; BOD disabled)

# The following do NOT work...
# attiny85at8.upload.using=avrispv2
# attiny85at8.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny85at8.upload.using=arduino:arduinoisp
# attiny85at8.upload.protocol=avrispv2
# attiny85at8.upload.using=pololu

attiny85at8.upload.maximum_size=8192
attiny85at8.upload.maximum_ram_size=512

# Default clock (slowly rising power; long delay to clock; 8 MHz internal)
# Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms; [CKSEL=0010 SUT=10]; default value
# Brown-out detection disabled; [BODLEVEL=111]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny85at8.bootloader.low_fuses=0xE2
attiny85at8.bootloader.high_fuses=0xD7
attiny85at8.bootloader.extended_fuses=0xFF
attiny85at8.bootloader.path=empty
#attiny85at8.bootloader.file=empty_all.hex
attiny85at8.bootloader.file=empty_all.hex

attiny85at8.build.mcu=attiny85
attiny85at8.build.f_cpu=8000000L
attiny85at8.build.core=tiny
 
###########################################################################

attiny85at1.name=ATtiny85 @ 1 MHz  (internal oscillator; BOD disabled)

# The following do NOT work...
# attiny85at1.upload.using=avrispv2
# attiny85at1.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny85at1.upload.using=arduino:arduinoisp
# attiny85at1.upload.protocol=avrispv2
# attiny85at1.upload.using=pololu

attiny85at1.upload.maximum_size=8192
attiny85at1.upload.maximum_ram_size=512

# Default clock (slowly rising power; long delay to clock; 8 MHz internal; divide clock by 8)
# Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms; [CKSEL=0010 SUT=10]; default value
# Divide clock by 8 internally; [CKDIV8=0]
# Brown-out detection disabled; [BODLEVEL=111]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny85at1.bootloader.low_fuses=0x62
attiny85at1.bootloader.high_fuses=0xD7
attiny85at1.bootloader.extended_fuses=0xFF
attiny85at1.bootloader.path=empty
#attiny85at1.bootloader.file=empty_all.hex
attiny85at1.bootloader.file=empty_all.hex

attiny85at1.build.mcu=attiny85
attiny85at1.build.f_cpu=1000000L
attiny85at1.build.core=tiny
 
###########################################################################

attiny45at8.name=ATtiny45 @ 8 MHz

# The following do NOT work...
# attiny45at8.upload.using=avrispv2
# attiny45at8.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny45at8.upload.using=arduino:arduinoisp
# attiny45at8.upload.protocol=avrispv2
# attiny45at8.upload.using=pololu

attiny45at8.upload.maximum_size=4096
attiny45at8.upload.maximum_ram_size=256

# Default clock (slowly rising power; long delay to clock; 8 MHz internal)
# Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms; [CKSEL=0010 SUT=10]; default value
# Brown-out detection disabled; [BODLEVEL=111]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny45at8.bootloader.low_fuses=0xE2
attiny45at8.bootloader.high_fuses=0xD7
attiny45at8.bootloader.extended_fuses=0xFF
attiny45at8.bootloader.path=empty
attiny45at8.bootloader.file=empty_all.hex

attiny45at8.build.mcu=attiny45
attiny45at8.build.f_cpu=8000000L
attiny45at8.build.core=tiny
 
###########################################################################

attiny45at1.name=ATtiny45 @ 1 MHz

# The following do NOT work...
# attiny45at1.upload.using=avrispv2
# attiny45at1.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny45at1.upload.using=arduino:arduinoisp
# attiny45at1.upload.protocol=avrispv2
# attiny45at1.upload.using=pololu

attiny45at1.upload.maximum_size=4096
attiny45at1.upload.maximum_ram_size=256


# Default clock (slowly rising power; long delay to clock; 8 MHz internal; divide clock by 8)
# Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms; [CKSEL=0010 SUT=10]; default value
# Divide clock by 8 internally; [CKDIV8=0]
# Brown-out detection disabled; [BODLEVEL=111]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny45at1.bootloader.low_fuses=0x62
attiny45at1.bootloader.high_fuses=0xD7
attiny45at1.bootloader.extended_fuses=0xFF
attiny45at1.bootloader.path=empty
attiny45at1.bootloader.file=empty_all.hex

attiny45at1.build.mcu=attiny45
attiny45at1.build.f_cpu=1000000L
attiny45at1.build.core=tiny
 
###########################################################################

attiny85at128.name=ATtiny85 @ 128 KHz  (watchdog oscillator; 1.8 V BOD)

# The following do NOT work...
# attiny85at128.upload.using=avrispv2
# attiny85at128.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny85at128.upload.using=arduino:arduinoisp
# attiny85at128.upload.protocol=avrispv2
# attiny85at128.upload.using=pololu

attiny85at128.upload.maximum_size=8192
attiny85at128.upload.maximum_ram_size=512

# WD. Osc. 128 kHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 0 ms; [CKSEL=0100 SUT=00]
# Brown-out detection level at VCC=1.8 V; [BODLEVEL=110]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]
# Serial program downloading (SPI) enabled; [SPIEN=0]

attiny85at128.bootloader.low_fuses=0xC4
attiny85at128.bootloader.high_fuses=0xD6
attiny85at128.bootloader.extended_fuses=0xFF
attiny85at128.bootloader.path=empty
attiny85at128.bootloader.file=empty_all.hex

attiny85at128.build.mcu=attiny85
attiny85at128.build.f_cpu=128000L
attiny85at128.build.core=tiny
 
###########################################################################

attiny25at8.name=ATtiny25 @ 8 MHz

# The following do NOT work...
# attiny25at8.upload.using=avrispv2
# attiny25at8.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny25at8.upload.using=arduino:arduinoisp
# attiny25at8.upload.protocol=avrispv2
# attiny25at8.upload.using=pololu

attiny25at8.upload.maximum_size=2048
attiny25at8.upload.maximum_ram_size=128

# Default clock (slowly rising power; long delay to clock; 8 MHz internal)
# Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms; [CKSEL=0010 SUT=10]; default value
# Brown-out detection disabled; [BODLEVEL=111]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny25at8.bootloader.low_fuses=0xE2
attiny25at8.bootloader.high_fuses=0xD7
attiny25at8.bootloader.extended_fuses=0xFF
attiny25at8.bootloader.path=empty
attiny25at8.bootloader.file=empty_all.hex

attiny25at8.build.mcu=attiny25
attiny25at8.build.f_cpu=8000000L
attiny25at8.build.core=tiny
 
###########################################################################

attiny25at1.name=ATtiny25 @ 1 MHz

# The following do NOT work...
# attiny25at1.upload.using=avrispv2
# attiny25at1.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny25at1.upload.using=arduino:arduinoisp
# attiny25at1.upload.protocol=avrispv2
# attiny25at1.upload.using=pololu

attiny25at1.upload.maximum_size=2048
attiny25at1.upload.maximum_ram_size=128

# Default clock (slowly rising power; long delay to clock; 8 MHz internal)
# Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms; [CKSEL=0010 SUT=10]; default value
# Brown-out detection disabled; [BODLEVEL=111]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny25at1.bootloader.low_fuses=0x62
attiny25at1.bootloader.high_fuses=0xD7
attiny25at1.bootloader.extended_fuses=0xFF
attiny25at1.bootloader.path=empty
attiny25at1.bootloader.file=empty_all.hex

attiny25at1.build.mcu=attiny25
attiny25at1.build.f_cpu=1000000L
attiny25at1.build.core=tiny
 
###########################################################################

attiny4313at8.name=ATtiny4313 @ 8 MHz

# The following do NOT work...
# attiny4313at8.upload.using=avrispv2
# attiny4313at8.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny4313at8.upload.using=arduino:arduinoisp
# attiny4313at8.upload.protocol=avrispv2
# attiny4313at8.upload.using=pololu

attiny4313at8.upload.maximum_size=4096
attiny4313at8.upload.maximum_ram_size=256

# Default clock (slowly rising power; long delay to clock; 8 MHz internal)
# Int. RC Osc. 8 MHz; Start-up time: 14 CK + 65 ms; [CKSEL=0100 SUT=10]; default value 
# Brown-out detection disabled; [BODLEVEL=111]
# Serial program downloading (SPI) enabled; [SPIEN=0]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny4313at8.bootloader.low_fuses=0xE4
attiny4313at8.bootloader.high_fuses=0x9F
attiny4313at8.bootloader.extended_fuses=0xFF
attiny4313at8.bootloader.path=empty
attiny4313at8.bootloader.file=empty_all.hex

attiny4313at8.build.mcu=attiny4313
attiny4313at8.build.f_cpu=8000000L
attiny4313at8.build.core=tiny
# attiny4313at8.build.core=empty
 
###########################################################################

attiny4313at1.name=ATtiny4313 @ 1 MHz

# The following do NOT work...
# attiny4313at1.upload.using=avrispv2
# attiny4313at1.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny4313at1.upload.using=arduino:arduinoisp
# attiny4313at1.upload.protocol=avrispv2
# attiny4313at1.upload.using=pololu

attiny4313at1.upload.maximum_size=4096
attiny4313at1.upload.maximum_ram_size=256

# Default clock (slowly rising power; long delay to clock; 8 MHz internal; divide clock by 8)
# Int. RC Osc. 8 MHz; Start-up time: 14 CK + 65 ms; [CKSEL=0100 SUT=10]; default value 
# Divide clock by 8 internally; [CKDIV8=0]
# Brown-out detection disabled; [BODLEVEL=111]
# Serial program downloading (SPI) enabled; [SPIEN=0]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny4313at1.bootloader.low_fuses=0x64
attiny4313at1.bootloader.high_fuses=0x9F
attiny4313at1.bootloader.extended_fuses=0xFF
attiny4313at1.bootloader.path=empty
attiny4313at1.bootloader.file=empty_all.hex

attiny4313at1.build.mcu=attiny4313
attiny4313at1.build.f_cpu=1000000L
attiny4313at1.build.core=tiny
# attiny4313at1.build.core=empty
 
###########################################################################

attiny2313at8.name=ATtiny2313 @ 8 MHz

# The following do NOT work...
# attiny2313at8.upload.using=avrispv2
# attiny2313at8.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny2313at8.upload.using=arduino:arduinoisp
# attiny2313at8.upload.protocol=avrispv2
# attiny2313at8.upload.using=pololu

attiny2313at8.upload.maximum_size=2048
attiny2313at8.upload.maximum_ram_size=128

# Default clock (slowly rising power; long delay to clock; 8 MHz internal)
# Int. RC Osc. 8 MHz; Start-up time: 14 CK + 65 ms; [CKSEL=0100 SUT=10]; default value 
# Brown-out detection disabled; [BODLEVEL=111]
# Serial program downloading (SPI) enabled; [SPIEN=0]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny2313at8.bootloader.low_fuses=0xE4
attiny2313at8.bootloader.high_fuses=0x9F
attiny2313at8.bootloader.extended_fuses=0xFF
attiny2313at8.bootloader.path=empty
attiny2313at8.bootloader.file=empty_all.hex

attiny2313at8.build.mcu=attiny2313
attiny2313at8.build.f_cpu=8000000L
attiny2313at8.build.core=tiny
 
###########################################################################

attiny2313at1.name=ATtiny2313 @ 1 MHz

# The following do NOT work...
# attiny2313at1.upload.using=avrispv2
# attiny2313at1.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
attiny2313at1.upload.using=arduino:arduinoisp
# attiny2313at1.upload.protocol=avrispv2
# attiny2313at1.upload.using=pololu

attiny2313at1.upload.maximum_size=2048
attiny2313at1.upload.maximum_ram_size=128

# Default clock (slowly rising power; long delay to clock; 8 MHz internal; divide clock by 8)
# Int. RC Osc. 8 MHz; Start-up time: 14 CK + 65 ms; [CKSEL=0100 SUT=10]; default value 
# Divide clock by 8 internally; [CKDIV8=0]
# Brown-out detection disabled; [BODLEVEL=111]
# Serial program downloading (SPI) enabled; [SPIEN=0]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny2313at1.bootloader.low_fuses=0x64
attiny2313at1.bootloader.high_fuses=0x9F
attiny2313at1.bootloader.extended_fuses=0xFF
attiny2313at1.bootloader.path=empty
attiny2313at1.bootloader.file=empty_all.hex

attiny2313at1.build.mcu=attiny2313
attiny2313at1.build.f_cpu=1000000L
attiny2313at1.build.core=tiny
 
###########################################################################



###
# ATTiny1634
###


###########################################################################

attiny1634at12e.name=ATTiny1634 @ 12 MHz  (external crystal; 4.3 V BOD)

# The following do NOT work...
# attiny1634at12e.upload.using=avrispv2
# attiny1634at12e.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
#attiny1634at12e.upload.using=arduino:arduinoisp
# attiny1634at12e.upload.protocol=avrispv2
# attiny1634at12e.upload.using=pololu
attiny1634at12e.upload.using=arduino

attiny1634at12e.upload.maximum_size=16384
attiny1634at12e.upload.maximum_ram_size=1024

# Ext. Crystal Osc.; Frequency 8.0- MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 65 ms; [CKSEL=1111 SUT=0]
# Brown-out detection level at VCC=4.3 V; [BODLEVEL=100]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]
# Serial program downloading (SPI) enabled; [SPIEN=0]
# BOD enabled: BODACT 10 BODPD 10

attiny1634at12e.bootloader.low_fuses=0xEF
attiny1634at12e.bootloader.high_fuses=0xD4
attiny1634at12e.bootloader.extended_fuses=0xF4
attiny1634at12e.bootloader.path=empty
attiny1634at12e.bootloader.file=empty_all.hex

attiny1634at12e.build.mcu=attiny1634
attiny1634at12e.build.f_cpu=12000000L
attiny1634at12e.build.core=tiny
 
###########################################################################

attiny1634at8.name=ATTiny1634 @ 8 MHz  (internal oscillator; BOD disabled)

# The following do NOT work...
# attiny1634at8.upload.using=avrispv2
# attiny1634at8.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
#attiny1634at8.upload.using=arduino:arduinoisp
# attiny1634at8.upload.protocol=avrispv2
# attiny1634at8.upload.using=pololu
attiny1634at8.upload.using=arduino

attiny1634at8.upload.maximum_size=16384
attiny1634at8.upload.maximum_ram_size=1024

# Default clock (slowly rising power; long delay to clock; 8 MHz internal)
# Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms; [CKSEL=0010 SUT=0]; default value
# Brown-out detection disabled; [BODLEVEL=111]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny1634at8.bootloader.low_fuses=0xE2
attiny1634at8.bootloader.high_fuses=0xD7
attiny1634at8.bootloader.extended_fuses=0xFE
attiny1634at8.bootloader.path=empty
attiny1634at8.bootloader.file=empty_all.hex

attiny1634at8.build.mcu=attiny1634
attiny1634at8.build.f_cpu=8000000L
attiny1634at8.build.core=tiny
 
###########################################################################

attiny1634at1.name=ATTiny1634 @ 1 MHz  (internal oscillator; BOD disabled)

# The following do NOT work...
# attiny1634at1.upload.using=avrispv2
# attiny1634at1.upload.using=Pololu USB AVR Programmer

# The following DO work (pick one)...
#attiny1634at1.upload.using=arduino:arduinoisp
# attiny1634at1.upload.protocol=avrispv2
# attiny1634at1.upload.using=pololu
attiny1634at1.upload.using=arduino

attiny1634at1.upload.maximum_size=16384
attiny1634at1.upload.maximum_ram_size=1024

# Default clock (slowly rising power; long delay to clock; 8 MHz internal; divide clock by 8)
# Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms; [CKSEL=0010 SUT=0]; default value
# Divide clock by 8 internally; [CKDIV8=0]
# Brown-out detection disabled; [BODLEVEL=111]
# Preserve EEPROM memory through the Chip Erase cycle; [EESAVE=0]

attiny1634at1.bootloader.low_fuses=0x62
attiny1634at1.bootloader.high_fuses=0xD7
attiny1634at1.bootloader.extended_fuses=0xFE
attiny1634at1.bootloader.path=empty
attiny1634at1.bootloader.file=empty_all.hex

attiny1634at1.build.mcu=attiny1634
attiny1634at1.build.f_cpu=1000000L
attiny1634at1.build.core=tiny


